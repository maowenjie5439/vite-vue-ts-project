{"version":3,"file":"preloadImgs.js","sourceRoot":"","sources":["preloadImgs.ts"],"names":[],"mappings":"AACA,OAAO,IAAI,MAAM,WAAW,CAAA;AAQ5B,MAAM,CAAC,MAAM,WAAW,GAAG,CAAC,OAA2B,EAAU,EAAE;IAC/D,IAAI,UAAU,GAAa,EAAE,CAAA;IAE7B,OAAO;QACH,IAAI,EAAE,yBAAyB;QAE/B,cAAc,CAAC,CAAC,EAAE,MAAM;YACpB,QAAQ,CAAC;YACT,uDAAuD;YAEvD,MAAM,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAA;YAEzC,OAAO,CAAC,GAAG,CAAC,mCAAmC,EAAE,UAAU,CAAC,CAAA;YAE5D,SAAS;QAEb,CAAC;QACD,kBAAkB,CAAC,CAAC,EAAE,GAA8B;YAChD,QAAQ,CAAA;YAER,IAAI,QAAQ,GAAa,EAAE,CAAA;YAC3B,MAAM,EAAE,GAAG,EAAE,KAAK,GAAG,EAAE,EAAC,GAAG,OAAO,CAAA;YAClC,2DAA2D;YAC3D,IAAG,GAAG,CAAC,MAAM,EAAC,CAAC;gBACX,OAAO;gBACP,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAA;gBACzB,WAAW;gBACX,QAAQ,GAAG,QAAQ,CAAC,GAAG,CAAC,QAAQ,CAAC,EAAE;oBAC/B,OAAO,GAAG,CAAC,MAAM,EAAE,MAAM,CAAC,IAAI,GAAG,QAAQ,CAAA;gBAC7C,CAAC,CAAC,CAAA;gBACF,UAAU,GAAG,QAAQ,CAAA;YACzB,CAAC;iBAAI,CAAC;gBACF,OAAO;gBACP,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAA;YAEvB,CAAC;YACD,2EAA2E;YAG3E,yFAAyF;YAGzF,yEAAyE;YAEzE,OAAO,UAAU,CAAC,GAAG,CAAC,OAAO,CAAC,EAAE;gBAC5B,OAAO;oBACH,GAAG,EAAE,MAAM;oBACX,KAAK,EAAE;wBACH,GAAG,EAAE,UAAU;wBACf,EAAE,EAAE,OAAO;wBACX,IAAI,EAAE,OAAO;wBACb,GAAG,KAAK;qBACX;iBACJ,CAAA;YACL,CAAC,CAAC,CAAA;QACN,CAAC;KACJ,CAAA;AACL,CAAC,CAAA","sourcesContent":["import type { IndexHtmlTransformContext, Plugin } from 'vite'\r\nimport glob from 'fast-glob'\r\n\r\ninterface PreloadImgsOptions {\r\n    dir: string,\r\n    attrs: {\r\n        rel: 'preload' | 'prefetch',\r\n    }\r\n}\r\nexport const preloadImgs = (options: PreloadImgsOptions): Plugin => {\r\n    let assetsImgs: string[] = []\r\n\r\n    return {\r\n        name: 'vite-plugin-img-preload',\r\n\r\n        generateBundle(_, bundle){\r\n            debugger;\r\n            // console.log(\"🚀 ~ generateBundle ~ bundle:\", bundle)\r\n\r\n            const assetsImgs = glob.sync(options.dir)\r\n\r\n            console.log(\"🚀 ~ generateBundle ~ assetsImgs:\", assetsImgs)\r\n\r\n            // bundle\r\n\r\n        },\r\n        transformIndexHtml(_, ctx: IndexHtmlTransformContext) {\r\n            debugger\r\n\r\n            let imgPaths: string[] = []\r\n            const { dir, attrs = {}} = options\r\n            // 读取public目录下的图片，结构如['imgs/autumn.jpg', 'imgs/spring.jpg']\r\n            if(ctx.server){\r\n                // 开发环境\r\n                imgPaths = glob.sync(dir)\r\n                // 考虑base路径\r\n                imgPaths = imgPaths.map(filePath => {\r\n                    return ctx.server?.config.base + filePath\r\n                })\r\n                assetsImgs = imgPaths\r\n            }else{\r\n                // 生产环境\r\n                console.log('生产环境')\r\n\r\n            }\r\n            // console.log(\"🚀 ~ preloadImgs.ts:19 ~ transformIndexHtml ~ imgs:\", imgs)\r\n\r\n\r\n            // console.log(\"🚀 ~ preloadImgs.ts:25 ~ transformIndexHtml ~ preloadImgs:\", preloadImgs)\r\n\r\n\r\n            // console.log(\"🚀 ~ preloadImgs.ts:28 ~ transformIndexHtml ~ dir:\", dir)\r\n\r\n            return assetsImgs.map(imgPath => {\r\n                return {\r\n                    tag: 'link',\r\n                    attrs: {\r\n                        rel: 'prefetch',\r\n                        as: 'image',\r\n                        href: imgPath,\r\n                        ...attrs\r\n                    }\r\n                }\r\n            })\r\n        }\r\n    }\r\n}"]}